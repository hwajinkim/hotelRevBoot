# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-docker-image:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    # 1. Java 17 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    # 2. Spring Boot 애플리케이션 빌드
    - name: Build with Maven
      run: mvn clean package

    # 3. Docker 이미지 빌드
    - name: docker image build
      run : docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/sonorous:0.0.7 .

    # 4. DockerHub 로그인
    - name: docker login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # 5. Docker Hub 이미지 푸시
    - name: docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/sonorous:0.0.7
      
  run-docker-image-on-ec2: 
    needs: build-docker-image
    runs-on: self-hosted
    
    steps:
      # 1. 최신 이미지를 풀받습니다
      - name: docker pull
        run: sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/sonorous:0.0.7
      # 2. 기존의 컨테이너를 중지시킵니다
      - name: docker stop container
        run: sudo docker stop $(sudo docker ps -q) 2>/dev/null || true

      # 3. 최신 이미지를 컨테이너화하여 실행시킵니다
      - name: docker run new container
        run: sudo docker run --name sample --rm -d -v /path/on/host/static/files:/src/main/resources/static/files -v /path/on/host/static/files/thumbnails:/src/main/resources/static/files/thumbnails -p 5000:8000 ${{ secrets.DOCKERHUB_USERNAME }}/sonorous:0.0.7

      # 4. 미사용 이미지를 정리합니다
      - name: delete old docker image
        run: sudo docker system prune -f

